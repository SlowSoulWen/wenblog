;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-shanchu" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M344.4593 791.382c15.4235 0 27.902-12.4795 27.902-27.902V456.558592c0-15.4225-12.4795-27.902-27.902-27.902-15.4225 0-27.902 12.4805-27.902 27.902v306.92249599999997C316.5573 778.9036 329.0368 791.382 344.4593 791.382zM511.872 791.382c15.4235 0 27.902-12.4795 27.902-27.902V456.558592c0-15.4225-12.4795-27.902-27.902-27.902s-27.902 12.4805-27.902 27.902v306.92249599999997C483.969 778.9036 496.4485 791.382 511.872 791.382zM679.2837 791.382c15.4235 0 27.902-12.4795 27.902-27.902V456.558592c0-15.4225-12.4795-27.902-27.902-27.902s-27.902 12.4805-27.902 27.902v306.92249599999997C651.3818 778.9036 663.8602 791.382 679.2837 791.382zM818.7935 149.6361H703.2340479999999c-12.4795-48.0113-55.8039-83.7059-107.6572-83.7059H428.16512000000006c-51.8533 0-95.1777 35.6946-107.6572 83.7059H204.949504c-61.5526 0-111.6078 50.0828-111.6078 111.6078v27.902976h27.901952v27.901952h55.803904v530.138112c0 61.526 50.0552 111.6078 111.6078 111.6078h446.432256c61.5547 0 111.6078-50.0818 111.6078-111.6078V317.047808h55.803904v-27.901952h27.901952v-27.902976C930.4013 199.7179 880.3482 149.6361 818.7935 149.6361zM428.1651 121.7341h167.411712c20.5445 0 38.3652 11.308 48.0389 27.902H380.12723200000005C389.801 133.0422 407.6206 121.7341 428.1651 121.7341zM790.8915 847.1859c0 30.7896-25.0399 55.8039-55.8039 55.8039H288.65536000000003c-30.763 0-59.6726-25.0143-59.6726-55.8039l3.8687-530.1381h558.040064V847.1859199999999zM149.1446 261.2439c0-30.7896 25.0419-55.8039 55.8039-55.8039H818.793472c30.7651 0 55.8039 25.0143 55.8039 55.8039H149.144576z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-xiugai" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M960.24 195.093c-7.045 25.162-13.3 48.539-30.685 62.625-152.125 123.258-274.058 276.3-412.026 413.431-3.627 3.608-7.963 6.79-10.664 11.005C448.23 773.604 345.66 785.267 255.894 819.69c-19.272 7.387-49.419-26.959-43.637-47.365 16.292-57.476 32.242-115.064 49.761-172.168 2.966-9.666 12.217-18.029 19.995-25.503 131.218-126.012 263.141-251.292 393.701-377.98 31.14-30.215 58.129-64.747 86.613-97.659 38.456-44.434 92.217-48.013 134.119-6.808 25.227 24.803 55.885 46.376 61.678 85.48 0.753 5.067 1.563 10.123 2.346 15.182C962.381 194.016 958.326 193.946 960.24 195.093zM721.565 237.124C594.361 364.575 467.393 491.786 343.14 616.279c21.402 21.686 45.09 45.688 65.777 66.644 127.033-124.28 255.2-249.665 382.735-374.434C765.676 282.037 742.021 257.954 721.565 237.124zM751.953 183.262c31.601 30.267 59.139 56.644 91.666 87.801 5.813-7.922 11.445-17.709 19.042-25.595 54.863-56.933 54.983-56.809-2.798-111.522-1.236-1.175-2.364-2.475-3.632-3.613-15.979-14.337-32.187-14.5-47.97-0.005C790.05 147.045 772.219 164.171 751.953 183.262zM281.031 750.936c29.28-11.791 52.376-21.089 72.131-29.043-15.174-17.848-29.055-34.176-45.392-53.396C298.67 696.539 290.938 720.387 281.031 750.936z"  ></path>' +
    '' +
    '<path d="M464.602 959.783c-84.649 0-169.299 0.129-253.948-0.055-46.354-0.102-87.305-12.635-118.404-50.028-20.506-24.654-26.319-53.31-26.365-83.719-0.255-168.444-0.916-336.896 0.196-505.335 0.591-90.427 56.421-144.32 146.989-144.846 91.49-0.531 182.985-0.018 274.474-0.201 20.044-0.037 39.148 1.542 41.708 26.855 1.875 18.522-13.274 27.868-42.991 27.891-88.919 0.075-177.848-0.133-266.776 0.085-63.603 0.158-99.734 36.669-99.753 100.365-0.06 162.45-0.075 324.903-0.035 487.354 0.01 50.26 33.871 86.142 84.609 86.331 173.573 0.657 347.151 0.527 520.724 0.116 41.066-0.096 67.666-29.396 67.848-73.861 0.454-111.143 0.216-222.289 0.386-333.438 0.015-8.486-1.965-19.188 2.284-24.958 7.151-9.717 19.358-23.275 27.953-22.286 8.985 1.033 16.895 16.867 23.842 27.193 2.397 3.558 0.548 10.007 0.548 15.137 0.01 110.302 0.154 220.605-0.041 330.907-0.16 92.874-43.949 136.383-136.985 136.483C628.777 959.857 546.689 959.792 464.602 959.783z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-cunrucaogaoxiang" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M993.315048 774.363395 764.285676 859.82317 915.951482 859.82317C937.037898 859.82317 954.132144 876.917034 954.132144 898.003832L954.132144 985.819353C954.132144 1006.905769 937.037898 1024.000015 915.951482 1024.000015L109.957715 1024.000015C88.870917 1024.000015 71.777053 1006.905769 71.777053 985.819353L71.777053 898.003832C71.777053 876.917034 88.870917 859.82317 109.957715 859.82317L251.924105 859.82317 15.393379 226.037932C10.365368 212.565885 17.211924 197.568903 30.685116 192.541274L515.206876 11.748205C546.421476 0.100812 544.240596-1.772331 555.421421 1.332138 559.575477 2.094606 563.818112 3.486673 567.956896 5.558356L757.56168 100.469372C767.562722 102.408568 781.310433 133.105438 786.680543 146.214386L1008.607166 740.866737C1013.635178 754.339165 1006.788621 769.336147 993.315048 774.363395ZM595.330521 77.495686 622.770199 151.02095 691.202163 125.486105 595.330521 77.495686ZM737.635193 163.741982 620.452633 207.46724C619.266742 208.138456 618.014798 208.728347 616.697183 209.220114 603.223991 214.247362 588.225482 207.401569 583.197471 193.929523L533.41447 60.535836 73.289007 232.225872 307.510567 859.82317 615.328788 859.82317 950.711538 734.679179 737.635193 163.741982ZM454.73138 771.647986C441.257806 776.675234 426.259679 769.829442 421.231668 756.357013 416.203656 742.884967 423.050213 727.887985 436.523786 722.860355L724.642695 615.352394C738.116269 610.324764 753.114778 617.170938 758.142408 630.642985 763.170419 644.115413 756.323863 659.112395 742.850289 664.139643L454.73138 771.647986ZM677.855731 489.986955 389.736822 597.494916C376.263248 602.522546 361.26512 595.676371 356.237109 582.204325 351.209098 568.731897 358.055654 553.734915 371.529228 548.707285L659.648137 441.199323C673.12171 436.172076 688.12022 443.017868 693.147849 456.490297 698.175861 469.962343 691.329304 484.959707 677.855731 489.986955ZM615.39675 322.62737 327.277459 430.135331C313.804267 435.162579 298.805758 428.316786 293.777747 414.84474 288.750117 401.372312 295.596673 386.37533 309.069865 381.3477L597.188774 273.839738C610.662348 268.812491 625.660857 275.658283 630.688868 289.13033 635.716498 302.602758 628.869942 317.59974 615.39675 322.62737ZM786.685889 146.227368C786.683979 146.223168 786.68207 146.218586 786.680543 146.214386L786.427024 145.535534C786.515985 145.773781 786.601891 146.003247 786.685889 146.227368ZM786.685889 146.227368C789.437951 152.946782 789.983552 155.03221 786.685889 146.227368Z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)